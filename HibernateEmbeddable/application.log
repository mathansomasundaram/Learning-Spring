[INFO] HHH000412: Hibernate ORM core version 5.4.12.Final
[INFO] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@24d4d7c9
[DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@71b3bc45
[DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@50fe837a
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration string -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61bcd567
[DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1252b961
[DEBUG] Adding type registration url -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@186978a6
[DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@675d8c96
[DEBUG] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3185fa6b
[DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a1edad4
[DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@226642a5
[DEBUG] Adding type registration image -> org.hibernate.type.ImageType@72bd06ca
[DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration text -> org.hibernate.type.TextType@2cf92cc7
[DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@611df6e3
[DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4215838f
[DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71e5f61d
[DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fd46303
[DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@69c79f09
[DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60b71e8f
[DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1255b1d1
[DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@464649c
[DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c22d4f
[DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f59185e
[DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60bdf15d
[DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47da3952
[DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51e4ccb3
[WARN] HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO] HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/practice]
[INFO] HHH10001001: Connection properties: {password=****, user=root}
[INFO] HHH10001003: Autocommit mode: false
[INFO] HHH000115: Hibernate connection pool size: 20 (min=1)
[INFO] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a137d7a]
[INFO] HSEARCH000034: Hibernate Search 5.11.5.Final
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bc33720]
[INFO] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bc33720] for TypeConfiguration
[INFO] UserDetails [userId=0, username=Mohan, address=[com.spring.embeddable.model.Address@7302ff13, com.spring.embeddable.model.Address@4017fe2c]]
[DEBUG] 
    /* insert com.spring.embeddable.model.UserDetails
        */ insert 
        into
            user_information
            (username) 
        values
            (?)
[TRACE] binding parameter [1] as [VARCHAR] - [Mohan]
[DEBUG] 
    /* insert collection
        row com.spring.embeddable.model.UserDetails.address */ insert 
        into
            user_Address
            (userId, city, pincode, street) 
        values
            (?, ?, ?, ?)
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] binding parameter [2] as [VARCHAR] - [Kovai]
[TRACE] binding parameter [3] as [INTEGER] - [64115]
[TRACE] binding parameter [4] as [VARCHAR] - [Beach road]
[DEBUG] 
    /* insert collection
        row com.spring.embeddable.model.UserDetails.address */ insert 
        into
            user_Address
            (userId, city, pincode, street) 
        values
            (?, ?, ?, ?)
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] binding parameter [2] as [VARCHAR] - [Trichy]
[TRACE] binding parameter [3] as [INTEGER] - [6410]
[TRACE] binding parameter [4] as [VARCHAR] - [PN Puthur]
[INFO] HHH000412: Hibernate ORM core version 5.4.12.Final
[INFO] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@24d4d7c9
[DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@71b3bc45
[DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@50fe837a
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration string -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61bcd567
[DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1252b961
[DEBUG] Adding type registration url -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@186978a6
[DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@675d8c96
[DEBUG] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3185fa6b
[DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a1edad4
[DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@226642a5
[DEBUG] Adding type registration image -> org.hibernate.type.ImageType@72bd06ca
[DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration text -> org.hibernate.type.TextType@2cf92cc7
[DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@611df6e3
[DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4215838f
[DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71e5f61d
[DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fd46303
[DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@69c79f09
[DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60b71e8f
[DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1255b1d1
[DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@464649c
[DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c22d4f
[DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f59185e
[DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60bdf15d
[DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47da3952
[DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51e4ccb3
[WARN] HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO] HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/practice]
[INFO] HHH10001001: Connection properties: {password=****, user=root}
[INFO] HHH10001003: Autocommit mode: false
[INFO] HHH000115: Hibernate connection pool size: 20 (min=1)
[INFO] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a137d7a]
[INFO] HSEARCH000034: Hibernate Search 5.11.5.Final
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bc33720]
[INFO] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bc33720] for TypeConfiguration
[DEBUG] 
    select
        userdetail0_.userId as userid1_1_0_,
        userdetail0_.username as username2_1_0_ 
    from
        user_information userdetail0_ 
    where
        userdetail0_.userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] extracted value ([username2_1_0_] : [VARCHAR]) - [Mohan]
[TRACE] Created collection wrapper: [com.spring.embeddable.model.UserDetails.address#1]
[DEBUG] 
    select
        address0_.userId as userid1_0_0_,
        address0_.city as city2_0_0_,
        address0_.pincode as pincode3_0_0_,
        address0_.street as street4_0_0_ 
    from
        user_Address address0_ 
    where
        address0_.userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] extracted value ([userid1_0_0_] : [INTEGER]) - [1]
[TRACE] extracted value ([city2_0_0_] : [VARCHAR]) - [Kovai]
[TRACE] extracted value ([pincode3_0_0_] : [INTEGER]) - [64115]
[TRACE] extracted value ([street4_0_0_] : [VARCHAR]) - [Beach road]
[TRACE] extracted value ([userid1_0_0_] : [INTEGER]) - [1]
[TRACE] extracted value ([city2_0_0_] : [VARCHAR]) - [Trichy]
[TRACE] extracted value ([pincode3_0_0_] : [INTEGER]) - [6410]
[TRACE] extracted value ([street4_0_0_] : [VARCHAR]) - [PN Puthur]
[DEBUG] 
    /* delete collection com.spring.embeddable.model.UserDetails.address */ delete 
        from
            user_Address 
        where
            userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[DEBUG] 
    /* insert collection
        row com.spring.embeddable.model.UserDetails.address */ insert 
        into
            user_Address
            (userId, city, pincode, street) 
        values
            (?, ?, ?, ?)
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] binding parameter [2] as [VARCHAR] - [Kovai]
[TRACE] binding parameter [3] as [INTEGER] - [64115]
[TRACE] binding parameter [4] as [VARCHAR] - [Beach road]
[DEBUG] 
    /* insert collection
        row com.spring.embeddable.model.UserDetails.address */ insert 
        into
            user_Address
            (userId, city, pincode, street) 
        values
            (?, ?, ?, ?)
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] binding parameter [2] as [VARCHAR] - [Trichy]
[TRACE] binding parameter [3] as [INTEGER] - [6410]
[TRACE] binding parameter [4] as [VARCHAR] - [PN Puthur]
[INFO] HHH000412: Hibernate ORM core version 5.4.12.Final
[INFO] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@24d4d7c9
[DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@71b3bc45
[DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@50fe837a
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration string -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61bcd567
[DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1252b961
[DEBUG] Adding type registration url -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@186978a6
[DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@675d8c96
[DEBUG] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3185fa6b
[DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a1edad4
[DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@226642a5
[DEBUG] Adding type registration image -> org.hibernate.type.ImageType@72bd06ca
[DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration text -> org.hibernate.type.TextType@2cf92cc7
[DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@611df6e3
[DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4215838f
[DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71e5f61d
[DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fd46303
[DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@69c79f09
[DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60b71e8f
[DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1255b1d1
[DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@464649c
[DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c22d4f
[DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f59185e
[DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60bdf15d
[DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47da3952
[DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51e4ccb3
[WARN] HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO] HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/practice]
[INFO] HHH10001001: Connection properties: {password=****, user=root}
[INFO] HHH10001003: Autocommit mode: false
[INFO] HHH000115: Hibernate connection pool size: 20 (min=1)
[INFO] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a137d7a]
[INFO] HSEARCH000034: Hibernate Search 5.11.5.Final
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bc33720]
[INFO] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bc33720] for TypeConfiguration
[DEBUG] 
    select
        userdetail0_.userId as userid1_1_0_,
        userdetail0_.username as username2_1_0_ 
    from
        user_information userdetail0_ 
    where
        userdetail0_.userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] extracted value ([username2_1_0_] : [VARCHAR]) - [Mohan]
[TRACE] Created collection wrapper: [com.spring.embeddable.model.UserDetails.address#1]
[DEBUG] 
    select
        address0_.userId as userid1_0_0_,
        address0_.city as city2_0_0_,
        address0_.pincode as pincode3_0_0_,
        address0_.street as street4_0_0_ 
    from
        user_Address address0_ 
    where
        address0_.userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] extracted value ([userid1_0_0_] : [INTEGER]) - [1]
[TRACE] extracted value ([city2_0_0_] : [VARCHAR]) - [Kovai]
[TRACE] extracted value ([pincode3_0_0_] : [INTEGER]) - [64115]
[TRACE] extracted value ([street4_0_0_] : [VARCHAR]) - [Beach road]
[TRACE] extracted value ([userid1_0_0_] : [INTEGER]) - [1]
[TRACE] extracted value ([city2_0_0_] : [VARCHAR]) - [Trichy]
[TRACE] extracted value ([pincode3_0_0_] : [INTEGER]) - [6410]
[TRACE] extracted value ([street4_0_0_] : [VARCHAR]) - [PN Puthur]
[DEBUG] 
    /* delete collection com.spring.embeddable.model.UserDetails.address */ delete 
        from
            user_Address 
        where
            userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[DEBUG] 
    /* insert collection
        row com.spring.embeddable.model.UserDetails.address */ insert 
        into
            user_Address
            (userId, city, pincode, street) 
        values
            (?, ?, ?, ?)
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] binding parameter [2] as [VARCHAR] - [Kovai]
[TRACE] binding parameter [3] as [INTEGER] - [64115]
[TRACE] binding parameter [4] as [VARCHAR] - [Beach road]
[DEBUG] 
    /* insert collection
        row com.spring.embeddable.model.UserDetails.address */ insert 
        into
            user_Address
            (userId, city, pincode, street) 
        values
            (?, ?, ?, ?)
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] binding parameter [2] as [VARCHAR] - [Trichy]
[TRACE] binding parameter [3] as [INTEGER] - [6410]
[TRACE] binding parameter [4] as [VARCHAR] - [PN Puthur]
[INFO] HHH000412: Hibernate ORM core version 5.4.12.Final
[INFO] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@24d4d7c9
[DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@71b3bc45
[DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@50fe837a
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration string -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61bcd567
[DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1252b961
[DEBUG] Adding type registration url -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@186978a6
[DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@675d8c96
[DEBUG] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3185fa6b
[DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a1edad4
[DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@226642a5
[DEBUG] Adding type registration image -> org.hibernate.type.ImageType@72bd06ca
[DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration text -> org.hibernate.type.TextType@2cf92cc7
[DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@611df6e3
[DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4215838f
[DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71e5f61d
[DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fd46303
[DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@69c79f09
[DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60b71e8f
[DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1255b1d1
[DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@464649c
[DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c22d4f
[DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f59185e
[DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60bdf15d
[DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47da3952
[DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51e4ccb3
[WARN] HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO] HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/practice]
[INFO] HHH10001001: Connection properties: {password=****, user=root}
[INFO] HHH10001003: Autocommit mode: false
[INFO] HHH000115: Hibernate connection pool size: 20 (min=1)
[INFO] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a137d7a]
[INFO] HSEARCH000034: Hibernate Search 5.11.5.Final
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bc33720]
[INFO] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bc33720] for TypeConfiguration
[DEBUG] 
    select
        userdetail0_.userId as userid1_1_0_,
        userdetail0_.username as username2_1_0_ 
    from
        user_information userdetail0_ 
    where
        userdetail0_.userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] extracted value ([username2_1_0_] : [VARCHAR]) - [Mohan]
[TRACE] Created collection wrapper: [com.spring.embeddable.model.UserDetails.address#1]
[DEBUG] 
    select
        address0_.userId as userid1_0_0_,
        address0_.city as city2_0_0_,
        address0_.pincode as pincode3_0_0_,
        address0_.street as street4_0_0_ 
    from
        user_Address address0_ 
    where
        address0_.userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] extracted value ([userid1_0_0_] : [INTEGER]) - [1]
[TRACE] extracted value ([city2_0_0_] : [VARCHAR]) - [Kovai]
[TRACE] extracted value ([pincode3_0_0_] : [INTEGER]) - [64115]
[TRACE] extracted value ([street4_0_0_] : [VARCHAR]) - [Beach road]
[TRACE] extracted value ([userid1_0_0_] : [INTEGER]) - [1]
[TRACE] extracted value ([city2_0_0_] : [VARCHAR]) - [Trichy]
[TRACE] extracted value ([pincode3_0_0_] : [INTEGER]) - [6410]
[TRACE] extracted value ([street4_0_0_] : [VARCHAR]) - [PN Puthur]
[DEBUG] 
    /* delete collection com.spring.embeddable.model.UserDetails.address */ delete 
        from
            user_Address 
        where
            userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[DEBUG] 
    /* insert collection
        row com.spring.embeddable.model.UserDetails.address */ insert 
        into
            user_Address
            (userId, city, pincode, street) 
        values
            (?, ?, ?, ?)
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] binding parameter [2] as [VARCHAR] - [Kovai]
[TRACE] binding parameter [3] as [INTEGER] - [64115]
[TRACE] binding parameter [4] as [VARCHAR] - [Beach road]
[DEBUG] 
    /* insert collection
        row com.spring.embeddable.model.UserDetails.address */ insert 
        into
            user_Address
            (userId, city, pincode, street) 
        values
            (?, ?, ?, ?)
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] binding parameter [2] as [VARCHAR] - [Trichy]
[TRACE] binding parameter [3] as [INTEGER] - [6410]
[TRACE] binding parameter [4] as [VARCHAR] - [PN Puthur]
[INFO] HHH000412: Hibernate ORM core version 5.4.12.Final
[INFO] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@24d4d7c9
[DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@71b3bc45
[DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@50fe837a
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration string -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61bcd567
[DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1252b961
[DEBUG] Adding type registration url -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@186978a6
[DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@675d8c96
[DEBUG] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3185fa6b
[DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a1edad4
[DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@226642a5
[DEBUG] Adding type registration image -> org.hibernate.type.ImageType@72bd06ca
[DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration text -> org.hibernate.type.TextType@2cf92cc7
[DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@611df6e3
[DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4215838f
[DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71e5f61d
[DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fd46303
[DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@69c79f09
[DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60b71e8f
[DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1255b1d1
[DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@464649c
[DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c22d4f
[DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f59185e
[DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60bdf15d
[DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47da3952
[DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51e4ccb3
[WARN] HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO] HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/practice]
[INFO] HHH10001001: Connection properties: {password=****, user=root}
[INFO] HHH10001003: Autocommit mode: false
[INFO] HHH000115: Hibernate connection pool size: 20 (min=1)
[INFO] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a137d7a]
[INFO] HSEARCH000034: Hibernate Search 5.11.5.Final
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bc33720]
[INFO] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bc33720] for TypeConfiguration
[DEBUG] 
    select
        userdetail0_.userId as userid1_1_0_,
        userdetail0_.username as username2_1_0_ 
    from
        user_information userdetail0_ 
    where
        userdetail0_.userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] extracted value ([username2_1_0_] : [VARCHAR]) - [Mohan]
[TRACE] Created collection wrapper: [com.spring.embeddable.model.UserDetails.address#1]
[INFO] Exceptionorg.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.spring.embeddable.model.UserDetails.address, could not initialize proxy - no Session
[INFO] HHH000412: Hibernate ORM core version 5.4.12.Final
[INFO] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@24d4d7c9
[DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@71b3bc45
[DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@50fe837a
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration string -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61bcd567
[DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1252b961
[DEBUG] Adding type registration url -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@186978a6
[DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@675d8c96
[DEBUG] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3185fa6b
[DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a1edad4
[DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@226642a5
[DEBUG] Adding type registration image -> org.hibernate.type.ImageType@72bd06ca
[DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration text -> org.hibernate.type.TextType@2cf92cc7
[DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@611df6e3
[DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4215838f
[DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71e5f61d
[DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fd46303
[DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@69c79f09
[DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60b71e8f
[DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1255b1d1
[DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@464649c
[DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c22d4f
[DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f59185e
[DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60bdf15d
[DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47da3952
[DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51e4ccb3
[WARN] HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO] HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/practice]
[INFO] HHH10001001: Connection properties: {password=****, user=root}
[INFO] HHH10001003: Autocommit mode: false
[INFO] HHH000115: Hibernate connection pool size: 20 (min=1)
[INFO] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a137d7a]
[INFO] HSEARCH000034: Hibernate Search 5.11.5.Final
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bc33720]
[INFO] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bc33720] for TypeConfiguration
[DEBUG] 
    select
        userdetail0_.userId as userid1_1_0_,
        userdetail0_.username as username2_1_0_ 
    from
        user_information userdetail0_ 
    where
        userdetail0_.userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] extracted value ([username2_1_0_] : [VARCHAR]) - [Mohan]
[TRACE] Created collection wrapper: [com.spring.embeddable.model.UserDetails.address#1]
[INFO] Exceptionorg.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.spring.embeddable.model.UserDetails.address, could not initialize proxy - no Session
[INFO] HHH000412: Hibernate ORM core version 5.4.12.Final
[INFO] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e1d3956
[DEBUG] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@24d4d7c9
[DEBUG] Adding type registration true_false -> org.hibernate.type.TrueFalseType@71b3bc45
[DEBUG] Adding type registration yes_no -> org.hibernate.type.YesNoType@50fe837a
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a527389
[DEBUG] Adding type registration character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration char -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bb75258
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3829ac1
[DEBUG] Adding type registration integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration int -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44828f6b
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration java.lang.Long -> org.hibernate.type.LongType@4de41af9
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62435e70
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275fe372
[DEBUG] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31e75d13
[DEBUG] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f9a01c1
[DEBUG] Adding type registration string -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration java.lang.String -> org.hibernate.type.StringType@5778826f
[DEBUG] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61bcd567
[DEBUG] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1252b961
[DEBUG] Adding type registration url -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d098f9b
[DEBUG] Adding type registration Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b64240d
[DEBUG] Adding type registration Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6731787b
[DEBUG] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba534b0
[DEBUG] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5860f3d7
[DEBUG] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34625ccd
[DEBUG] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10fde30a
[DEBUG] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9bd0fa6
[DEBUG] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55787112
[DEBUG] Adding type registration date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7383eae2
[DEBUG] Adding type registration time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ae33a11
[DEBUG] Adding type registration timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34a75079
[DEBUG] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@186978a6
[DEBUG] Adding type registration calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267f474e
[DEBUG] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@675d8c96
[DEBUG] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3185fa6b
[DEBUG] Adding type registration locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@bcec031
[DEBUG] Adding type registration currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4648ce9
[DEBUG] Adding type registration timezone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@180e6ac4
[DEBUG] Adding type registration class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68759011
[DEBUG] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43b4fe19
[DEBUG] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a1edad4
[DEBUG] Adding type registration binary -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration byte[] -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration [B -> org.hibernate.type.BinaryType@757d6814
[DEBUG] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36b0fcd5
[DEBUG] Adding type registration row_version -> org.hibernate.type.RowVersionType@226642a5
[DEBUG] Adding type registration image -> org.hibernate.type.ImageType@72bd06ca
[DEBUG] Adding type registration characters -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration char[] -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration [C -> org.hibernate.type.CharArrayType@1a1da881
[DEBUG] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f2ef586
[DEBUG] Adding type registration text -> org.hibernate.type.TextType@2cf92cc7
[DEBUG] Adding type registration ntext -> org.hibernate.type.NTextType@611df6e3
[DEBUG] Adding type registration blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78aea4b9
[DEBUG] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4215838f
[DEBUG] Adding type registration clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a9f80d3
[DEBUG] Adding type registration nclob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d10e0b1
[DEBUG] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71e5f61d
[DEBUG] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fd46303
[DEBUG] Adding type registration serializable -> org.hibernate.type.SerializableType@69c79f09
[DEBUG] Adding type registration object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35fe2125
[DEBUG] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60b71e8f
[DEBUG] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1255b1d1
[DEBUG] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@464649c
[DEBUG] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c22d4f
[DEBUG] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f59185e
[DEBUG] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60bdf15d
[DEBUG] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47da3952
[DEBUG] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51e4ccb3
[WARN] HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO] HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/practice]
[INFO] HHH10001001: Connection properties: {password=****, user=root}
[INFO] HHH10001003: Autocommit mode: false
[INFO] HHH000115: Hibernate connection pool size: 20 (min=1)
[INFO] HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a137d7a]
[INFO] HSEARCH000034: Hibernate Search 5.11.5.Final
[DEBUG] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e85c6f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bc33720]
[INFO] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bc33720] for TypeConfiguration
[DEBUG] 
    select
        userdetail0_.userId as userid1_1_0_,
        userdetail0_.username as username2_1_0_,
        address1_.userId as userid1_0_1_,
        address1_.city as city2_0_1_,
        address1_.pincode as pincode3_0_1_,
        address1_.street as street4_0_1_ 
    from
        user_information userdetail0_ 
    left outer join
        user_Address address1_ 
            on userdetail0_.userId=address1_.userId 
    where
        userdetail0_.userId=?
[TRACE] binding parameter [1] as [INTEGER] - [1]
[TRACE] extracted value ([username2_1_0_] : [VARCHAR]) - [Mohan]
[TRACE] extracted value ([userid1_0_1_] : [INTEGER]) - [1]
[TRACE] extracted value ([city2_0_1_] : [VARCHAR]) - [Kovai]
[TRACE] extracted value ([pincode3_0_1_] : [INTEGER]) - [64115]
[TRACE] extracted value ([street4_0_1_] : [VARCHAR]) - [Beach road]
[TRACE] extracted value ([userid1_0_1_] : [INTEGER]) - [1]
[TRACE] extracted value ([city2_0_1_] : [VARCHAR]) - [Trichy]
[TRACE] extracted value ([pincode3_0_1_] : [INTEGER]) - [6410]
[TRACE] extracted value ([street4_0_1_] : [VARCHAR]) - [PN Puthur]
